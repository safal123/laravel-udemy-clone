import{r as o,j as l,c as h}from"./app-B_dPBHtO.js";import{F as U}from"./FieldGroup--97-1cdp.js";import{F as w}from"./FileInput-BjWUkHBD.js";import{J as m}from"./index-CUq39JnT.js";import"./button-KTk-Rr5B.js";import"./index-BZ36hmY6.js";import"./utils-8RyR4BqC.js";import"./index-DOanv77b.js";import"./index-BoJCk773.js";import"./createLucideIcon-Cec6fke2.js";import"./loader-B6WH0jKO.js";const R=({errors:a,course:r})=>{const[n,p]=o.useState(""),[g,i]=o.useState(!1),[u,c]=o.useState(null);function d(e){var s;const t=(s=e.target.files)==null?void 0:s[0];t&&(p(URL.createObjectURL(t)),c(t))}const f=async()=>{try{i(!0);const e=await h.post("/s3/get-signed-url",{fileName:r.id,path:"courses/images"});if(!e)throw new Error("Failed to get signed url");if(!(await fetch(e.data.url,{method:"PUT",body:u})).ok)throw new Error("Failed to upload image to S3");m("Image uploaded successfully")}catch(e){console.log(e),m("Failed to upload image")}finally{i(!1)}};return l.jsx(U,{label:"Course Image",name:"image",error:a.image_storage_id,children:l.jsx(w,{name:"image",accept:"image/*",objectUrl:r.image_url,previewUrl:n,error:a.image_storage_id,onChange:d,uploadToS3:f,loading:g})})};export{R as default};
